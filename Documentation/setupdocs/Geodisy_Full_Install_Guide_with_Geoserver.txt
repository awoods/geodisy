middleware VM
--------------
CentOS 7
yum -y update

Unless otherwise noted, commands executed in a root shell

1. Install GeoServer 2.17.x (Stable)
* Install Java 8
yum install java-1.8.0-openjdk

* Install Platform Independent binary from http://geoserver.org/release/stable/
wget http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/geoserver-2.17.0-bin.zip
mkdir -p /opt/share/geoserver
mkdir -p /opt/share/geoserver/geoserver-2.17.0
unzip geoserver-2.17.0-bin.zip in /opt/share/geoserver/geoserver-2.17.0
useradd -r geoserver

chown -R geoserver /opt/share/geoserver/
chown -R geoserver /opt/share/geoserver/geoserver-2.17.0

* As geoserver user (manual startup)

export GEOSERVER_HOME=/opt/share/geoserver/geoserver-2.16.0
cd /opt/share/geoserver/geoserver-2.16.0
sh startup.sh

* Install startup script in /etc/systemd/system/geoserver.service
[Unit]
Description=Startup GeoServer
After=network.target

[Service]
Type=simple
User=geoserver
Group=geoserver
Environment=GEOSERVER_HOME=/opt/share/geoserver/geoserver-2.16.0
ExecStart=/opt/share/geoserver/geoserver-2.16.0/bin/startup.sh
TimeoutStartSec=0

[Install]
WantedBy=default.target

systemctl daemon-reload
systemctl start geoserver.service

* Login and test
http://206.12.92.97:8080/geoserver
admin
<< password provided separately >>

* Install import extension
Geoserver w/import extension
Download importer extension Core from http://geoserver.org/release/stable/
unzip geoserver-2.16.0-importer-plugin.zip into /opt/share/geoserver/geoserver-2.16.0/webapps/geoserver/WEB-INF/lib

* Install other extensions
wget the following into /opt/share/geoserver/ and then unzip them to /opt/share/geoserver/geoserver-2.17.0/webapps/geoserver/WEB-INF/lib/
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-gdal-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-wps-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-ogr-wps-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-ogr-wfs-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-netcdf-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-netcdf-out-plugin.zip
        http://sourceforge.net/projects/geoserver/files/GeoServer/2.17.0/extensions/geoserver-2.17.0-excel-plugin.zip


* Apache reverse proxy
yum install mod_ssl openssl

systemctl enable httpd
systemctl start httpd

yum install certbot python2-certbot-apache mod_ssl
mkdir -p /var/www/206-12-92-97.cloud.computecanada.ca/html

Add virtual host in /etc/httpd/conf.d/206-12-92-97.cloud.computecanada.ca.conf
<VirtualHost *:80>
ServerName 206-12-92-97.cloud.computecanada.ca
DocumentRoot /var/www/206-12-92-97.cloud.computecanada.ca/html
ErrorLog /etc/httpd/logs/error_log
CustomLog /etc/httpd/logs/access_log combined
</VirtualHost>

certbot --apache -d 206-12-92-97.cloud.computecanada.ca

in /etc/httpd/conf.d/206-12-92-97.cloud.computecanada.ca-le-ssl.conf
<Location /geoserver>
        ProxyPass         http://localhost:8080/geoserver
        ProxyPassReverse  http://localhost:8080/geoserver
        Order allow,deny
        Allow from all
</Location>

In GeoServer Global Settings, set Base URL to:
https://206-12-92-97.cloud.computecanada.ca/geoserver

Note: https access can be opened up; however port 8080 access to GeoServer should be restricted to admin IPs only.


2. Install PostGIS 30 and GDAL 30 for PostgreSQL 12
wget https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
rpm -ivh pgdg-redhat-repo-latest.noarch.rpm

* Install PostgreSQL 12
yum install postgresql12 postgresql12-server postgresql12-libs postgresql12-contrib postgresql12-devel

/usr/pgsql-12/bin/postgresql-12-setup initdb
systemctl enable postgresql-12
systemctl start postgresql-12

* yum install postgis30_12 postgis30_12-client postgis30_12-debuginfo postgis30_12-devel postgis30_12-docs postgis30_12-gui postgis30_12-utils

* yum install gdal30-libs gdal30 gdal30-debuginfo gdal30-devel gdal30-do
(installs binaries to /usr/gdal30/bin)

3. Install GDAL 2.x

TODO: Figure out steps


4. Install GeoBlacklight and Solr

* Install Rbenv
yum install git-core zlib zlib-devel gcc-c++ patch readline readline-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel

* Create GeoBlacklight user and directories
useradd -r geoserver

mkdir -p /opt/geoblacklight
chown -R geoblack /opt/geoblacklight/

create geoblack home directory
[root@middleware home]# mkdir geoblack
[root@middleware home]# cd geoblack/
[root@middleware geoblack]# cp -r /etc/skel/.??* .
[root@middleware geoblack]# cd ..
[root@middleware home]# chown -R geoblack:geoblack geoblack/

* Install node.js and yarn
node.js
curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash -
sudo yum install -y nodejs

Yarn
curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
sudo yum install yarn

* As user "geoblack" install ruby and gems
curl -sL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash -
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
source ~/.bashrc
rbenv install 2.6.1
rbenv global 2.6.1
rbenv rehash

gem install rails -v 5.2.3
gem install bundler
gem install --default -v2.0.2 bundler
gem install execjs

* Install Solr 8.3.0
yum install lsof
export LATEST_VER="8.3.0"
curl -O https://www-eu.apache.org/dist/lucene/solr/${LATEST_VER}/solr-${LATEST_VER}.tgz
tar xvf solr-${LATEST_VER}.tgz

cd solr-${LATEST_VER}/bin/
./install_solr_service.sh ~/solr-${LATEST_VER}.tgz
systemctl enable solr

in /etc/security/limits.conf, add
solr             -       nofile          65000
solr             -       nproc           65000

Reference: https://github.com/projectblacklight/blacklight/wiki/README_SOLR

Configure Solr security:
vi /var/solr/data/security.json

# Encoded pw = ge0d1sy
{
  "authentication":{ 
    "blockUnknown": true, 
    "class":"solr.BasicAuthPlugin",
    "credentials":{"admin":"yjGh8657QV5ryRDBiNe07MUPKrlrkW/fG4xLDnA5Pnw= SukmLiIEomRrC2XvvpSMQONs7CVXsw/nEVPX2jv+luM="}, 
    "realm":"Solr users" 
  },
  "authorization":{
    "class":"solr.RuleBasedAuthorizationPlugin",
    "permissions":[{
       "name":"security-edit",
       "role":"admin"}], 
    "user-role":{"admin":"admin"} 
  }
}

chown solr:solr /var/solr/data/security.json
chmod 640 /var/solr/data/security.json

systemctl enable solr
systemctl start solr

* Create a Solr core for Geodisy as a quick test
/opt/solr/bin/solr create_core -c geodisy

* Install GeoBlacklight as user "geoblack"
Reference: https://github.com/geoblacklight/geoblacklight/wiki/Installation

cd /opt/geoblacklight
RBENV_VERSION=2.6.1 rbenv exec rails _5.2.3_ new geodisy -m https://raw.githubusercontent.com/geoblacklight/geoblacklight/master/template.rb

* Configure GeoBlacklight Solr core as user "solr"
cd /var/solr/data
mkdir geoblacklight-core
cd geoblacklight-core
mkdir conf
mkdir data
cp -a /opt/geoblacklight/geodisy/solr/conf/* /var/solr/data/geoblacklight-core/conf/

* Add core in Solr web admin (http://206-12-92-97.cloud.computecanada.ca:8983/)
systemctl restart solr

Log in as admin
- core admin -> add new core
- name: geoblacklight-core
- instanceDir: geoblacklight-core
- dataDir: data
- config: solrconfig.xml
- schema: schema.xml

Make sure /opt/geoblacklight/geodisy/config/blacklight.yml has the correct core name

* GeoBlacklight can be started by:

RAILS_ENV=production rails s

* Install startup script:

Install startup script in /etc/systemd/system/geoblacklight.service
[Unit]
Description=GeoBlacklight
Requires=network.target

[Service]
Type=simple
User=geoblack
Group=geoblack
WorkingDirectory=/opt/geoblacklight/geodisy
ExecStart=/bin/bash -lc 'bundle exec rails server -e production --port 3000'
TimeoutSec=60s
RestartSec=30s
Restart=always

[Install]
WantedBy=multi-user.target

systemctl daemon-reload
systemctl start geoblacklight.service
systemctl enable geoblacklight.service

* Finalized production configuration

- in /opt/geoblacklight/geodisy/config/environments/production.rb: set config.assets.compile = true and comment out #config.assets.js_compressor = :uglifier
- in /opt/geoblacklight/geodisy/db: cp test.sqlite3 production.sqlite3

Test by going to http://206-12-92-97.cloud.computecanada.ca:3000


5. Install GeoCombine

git clone https://github.com/OpenGeoMetadata/GeoCombine.git
cd GeoCombine
bundle install

* Index some documents
- Make sure that in /home/geoblack/GeoCombine/lib/tasks/geo_combine.rake, the correct Solr URL is set
- In GeoCombine dir, mkdir tmp
- Run rake geocombine:clone and then rake geocombine:index


6. SELinux config

* If running SELinux, apply the necessary booleans to allow httpd proxy operation:
/usr/sbin/setsebool -P httpd_can_network_connect 1


7. Startup scripts

* GeoServer: /etc/systemd/system/geoserver.service
* PostgreSQL: enabled via systemctl
* GeoBlacklight: /etc/systemd/system/geoblacklight.service
* Solr: enabled via systemctl

8. TODO

* May not need: Figure out how (if) authentication to solr is needed or supported by GeoBlacklight. For now, run with blockUnknown: false in "/var/solr/data/security.json"
* SSL support: GeoBlacklight
